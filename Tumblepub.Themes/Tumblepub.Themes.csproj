<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
	</PropertyGroup>

	<ItemGroup>
		<None Remove="DefaultTheme\node_modules\**" />
		<None Remove="DefaultTheme\dist\**" />
		<EmbeddedResource Include="DefaultTheme\dist\index.hbs" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="Handlebars.Net" Version="2.0.10" />
	  <PackageReference Include="Humanizer" Version="2.13.14" />
	</ItemGroup>

	<!--
		1. Install npm packages
		"Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
		The first time the task is executed. Then, it only runs when you change the package.json file.
		Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
	-->
	<Target Name="NpmInstall" Inputs="./DefaultTheme/package.json" Outputs="./DefaultTheme/node_modules/.install-stamp">
		<!--
			Use npm install or npm ci depending on RestorePackagesWithLockFile value.
			Uncomment the following lines if you want to use this feature:

			<PropertyGroup>
			  <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
			</PropertyGroup>
		 -->
		<Exec Command="npm ci" WorkingDirectory="./DefaultTheme/" Condition="$(RestorePackagesWithLockFile) == 'true'" />
		<Exec Command="npm install" WorkingDirectory="./DefaultTheme/" Condition="$(RestorePackagesWithLockFile) != 'true'" />

		<!-- Write the stamp file, so incremental builds work -->
		<Touch Files="./DefaultTheme/node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>

	<!--
		2. Run npm run build before building the .NET project.
		MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
	-->
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
		<Exec Command="npm run build" WorkingDirectory="./DefaultTheme/" />
	</Target>

</Project>
